plugins {
    id 'com.android.application'
}

apply plugin: 'com.google.gms.google-services'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {

    compileSdkVersion 34

    defaultConfig {
        applicationId "com.espressif.mediwatch"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 24
        versionName "2.2.3 - ${getGitHash()}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-proguard-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "proof_of_possesion", "abcd1234"
            resValue "string", "wifi_base_url", "192.168.4.1:80"
            resValue "string", "wifi_device_name_prefix", "PROV_"
            resValue "string", "ble_device_name_prefix", "PROV_"
            buildConfigField "boolean", "isQrCodeSupported", "flase"
            buildConfigField "boolean", "isSettingsAllowed", "true"
            buildConfigField "boolean", "isFilteringByPrefixAllowed", "true"
        }

        debug {
            debuggable true
            resValue "string", "proof_of_possesion", "abcd1234"
            resValue "string", "wifi_base_url", "192.168.4.1:80"
            resValue "string", "wifi_device_name_prefix", "PROV_"
            resValue "string", "ble_device_name_prefix", "PROV_"
            buildConfigField "boolean", "isQrCodeSupported", "false"
            buildConfigField "boolean", "isSettingsAllowed", "true"
            buildConfigField "boolean", "isFilteringByPrefixAllowed", "true"
        }
    }
    namespace 'com.espressif.mediwatch'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.google.protobuf:protobuf-javalite:3.18.0'
    implementation 'com.google.crypto.tink:tink-android:1.6.1'
    implementation project(path: ':provisioning')

    implementation 'org.greenrobot:eventbus:3.3.1'
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.2'
    implementation 'com.github.firdausmaulan:AVLoadingIndicatorView:2.3.0'

    implementation 'com.google.android.gms:play-services-threadnetwork:16.0.1'

    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'androidx.credentials:credentials:1.0.0'
    implementation 'androidx.credentials:credentials-play-services-auth:1.0.0'
    implementation platform('com.google.firebase:firebase-bom:33.11.0')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.firebaseui:firebase-ui-auth:8.0.2'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.android.libraries.identity.googleid:googleid:1.1.1'
    implementation 'androidx.core:core:1.9.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
